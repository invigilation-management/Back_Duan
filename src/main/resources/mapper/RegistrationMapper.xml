<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatisplus.mapper.RegistrationMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.mybatisplus.model.domain.Registration">
        <id column="registration_id" property="registrationId" />
        <result column="faculty_faculty_id" property="facultyFacultyId" />
        <result column="batch_batch_id" property="batchBatchId" />
        <result column="compensation_compensation_id" property="compensationCompensationId" />
        <result column="state" property="state" />
        <result column="pass_or_not" property="passOrNot" />
        <result column="gender" property="gender" />
        <result column="true_faculty_id" property="trueFacultyId" />
        <result column="college" property="college" />
        <result column="true_faculty_name" property="trueFacultyName" />
        <result column="edu_qualification" property="eduQualification" />
        <result column="tele" property="tele" />
        <result column="tele_backup" property="teleBackup" />
        <result column="birthday" property="birthday" />
        <result column="avatar" property="avatar" />
        <result column="target_campus" property="targetCampus" />
    </resultMap>


    <resultMap id="WaitingPage" type="com.example.mybatisplus.model.domain.Registration">
        <id property="registrationId" column="registration_id"/>
        <result property="trueFacultyName" column="true_faculty_name"/>
        <result property="facultyFacultyId" column="faculty_faculty_id"/>
        <result property="trueFacultyId" column="true_faculty_id"/>
        <result property="targetCampus" column="target_campus"/>
        <association property="batch" javaType="com.example.mybatisplus.model.domain.Batch">
            <result property="batchName" column="batch_Name"/>
        </association>
    </resultMap>

    <resultMap id="WaitingPageWithApproval" type="com.example.mybatisplus.model.domain.Registration">
        <id property="registrationId" column="registration_id"/>
        <result property="trueFacultyName" column="true_faculty_name"/>
        <result property="gender" column="gender" />
        <result property="college" column="college" />
        <result property="trueFacultyId" column="true_faculty_id"/>
        <result property="passOrNot"  column="pass_or_not"/>
        <association property="approval" javaType="com.example.mybatisplus.model.domain.Approval">
            <result property="approvalDate" column="approval_date"/>
        </association>
    </resultMap>

    <resultMap id="WaitingPageWithBatch" type="com.example.mybatisplus.model.domain.Registration">
        <id property="registrationId" column="registration_id"/>
        <result property="trueFacultyName" column="true_faculty_name"/>
        <result property="gender" column="gender" />
        <result property="college" column="college" />
        <result property="trueFacultyId" column="true_faculty_id"/>
        <result property="tele" column="tele"/>
        <result property="classroom" column="classroom"/>
        <result property="passOrNot"  column="pass_or_not"/>
        <association property="batch" javaType="com.example.mybatisplus.model.domain.Batch">
            <result property="batchDuration" column="batch_duration"/>
            <result property="batchStartTime" column="batch_start_time"/>
            <result property="batchEndTime" column="batch_end_time"/>
        </association>
    </resultMap>

    <resultMap id="TeachersBatchDetail" type="com.example.mybatisplus.model.domain.Registration">
        <id property="registrationId" column="registration_id"/>
        <result property="confirmOrNot"  column="confirm_or_not"/>
        <association property="batch" javaType="com.example.mybatisplus.model.domain.Batch">
            <result property="batchName" column="batch_name"/>
            <result property="regStartTime" column="reg_start_time"/>
            <result property="regEndTime" column="reg_end_time"/>
        </association>
    </resultMap>

    <select id="selectCountByBatchNameAndTargetCampus" resultType="java.lang.Integer">
        SELECT COUNT(*) AS total_registrations
        FROM registration r
                 JOIN batch b ON r.batch_batch_id = b.batch_id
        WHERE r.target_campus = #{targetCampus} AND
            b.batch_name = #{batchName} AND
            r.pass_or_not = 1;

    </select>

    <insert id="afterApprovalAdd">
        INSERT INTO approval (approval_date, approval_faculty_id, approval_result, registration_registration_id)
        SELECT NOW(), #{userId}, 1, registration.registration_id
        FROM registration
        JOIN batch ON registration.batch_batch_id = batch.batch_id
        WHERE registration.true_faculty_id = #{trueFacultyId}
        AND batch.batch_name = #{batchName}
        LIMIT 1
    </insert>
    <insert id="afterDisapprovalAdd">
        INSERT INTO approval (approval_date, approval_faculty_id, approval_result, registration_registration_id)
        SELECT NOW(), #{userId}, 0, registration.registration_id
        FROM registration
                 JOIN batch ON registration.batch_batch_id = batch.batch_id
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
            LIMIT 1
    </insert>
    <insert id="insertRegistration" useGeneratedKeys="true" keyProperty="registrationId" keyColumn="registration_id">
        INSERT INTO registration (
            faculty_faculty_id,
            batch_batch_id,
            gender,
            true_faculty_id,
            college,
            true_faculty_name,
            edu_qualification,
            tele,
            tele_backup,
            birthday,
            avatar,
            target_campus,
            create_time
        ) VALUES (
                     #{registration.facultyFacultyId},
                     #{registration.batchBatchId},
                     #{registration.gender},
                     #{registration.trueFacultyId},
                     #{registration.college},
                     #{registration.trueFacultyName},
                     #{registration.eduQualification},
                     #{registration.tele},
                     #{registration.teleBackup},
                     #{registration.birthday, jdbcType=TIMESTAMP},
                     #{registration.avatar},
                     #{registration.targetCampus},
                    NOW()
                 )
    </insert>
    <insert id="afterApprovalOfficeAdd">
        INSERT INTO approval (approval_date, approval_faculty_id, approval_result, registration_registration_id)
        SELECT NOW(), #{userId}, 1, registration.registration_id
        FROM registration
                 JOIN batch ON registration.batch_batch_id = batch.batch_id
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
            LIMIT 1
    </insert>
    <insert id="afterDisapprovalOfficeAdd">
        INSERT INTO approval (approval_date, approval_faculty_id, approval_result, registration_registration_id)
        SELECT NOW(), #{userId}, 0, registration.registration_id
        FROM registration
                 JOIN batch ON registration.batch_batch_id = batch.batch_id
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
            LIMIT 1
    </insert>


    <update id="afterApprovalUpdate">
        UPDATE registration
            JOIN batch ON registration.batch_batch_id = batch.batch_id
        SET registration.state = 5, registration.pass_or_not = 1, registration.target_campus = #{targetCampus}
        WHERE registration.true_faculty_id = #{trueFacultyId}
            AND batch.batch_name = #{batchName}
    </update>
    <update id="afterDisapprovalUpdate">
        UPDATE registration
            JOIN batch ON registration.batch_batch_id = batch.batch_id
            SET registration.state = 5, registration.pass_or_not = 0
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
    </update>
    <update id="afterApprovalOfficeUpdate">
        UPDATE registration
            JOIN batch ON registration.batch_batch_id = batch.batch_id
            SET registration.state = registration.state + 1
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
          AND registration.target_campus = #{targetCampus}
    </update>

    <update id="afterDisapprovalOfficeUpdate">
        UPDATE registration
            JOIN batch ON registration.batch_batch_id = batch.batch_id
            SET registration.state = registration.state + 1, registration.pass_or_not = 0
        WHERE registration.true_faculty_id = #{trueFacultyId}
          AND batch.batch_name = #{batchName}
    </update>

    <select id="selectWaitingPage" resultMap="WaitingPage">
        SELECT
            r.registration_id AS registration_id,
            r.true_faculty_name AS true_faculty_name,
            r.true_faculty_id AS true_faculty_id,
            u.faculty_faculty_id AS faculty_faculty_id,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus,
            f.level AS level,
            f.college_college_id AS collegeCollegeId
        FROM
            registration r
                JOIN
            user u
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId}
          AND r.pass_or_not IS NULL
          AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
          AND (
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 1
                OR
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 2
                OR
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 3
            )
    </select>
    <select id="getWaitingUnclearFindByWorkNum" resultMap="WaitingPage">
    -- 在这个地方实现上面selectWaitingPage待审批中使用工号的模糊查询
    -- 传入参数为worknum（Long）+ user_id
    -- GPT4: 在 SQL 中，你不能直接从一个 XML 映射的查询 ID (selectWaitingPage) 进行查询。
    --     SQL 和 MyBatis 框架不支持直接引用另一个查询 ID 作为数据源。要在 selectWaitingPage 的基础上进一步应用过滤或操作，
    --     你需要将其作为一个子查询嵌入到一个新的查询中。
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND
                 r.pass_or_not IS NULL
               AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
               AND (
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 1
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 2
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 3
                 )) AS registration
        WHERE
            registration.true_faculty_id LIKE CONCAT('%', #{worknum}, '%')
    </select>
    <select id="getWaitingUnclearFindByName" resultMap="WaitingPage">
        -- 在这个地方实现上面selectWaitingPage待审批中使用姓名的模糊查询
        -- 传入参数为name（String）
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND
                 r.pass_or_not IS NULL
               AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
               AND (
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 1
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 2
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 3
                 )) AS registration
        WHERE
            registration.true_faculty_name LIKE CONCAT('%', #{name}, '%')
        OR registration.true_faculty_id LIKE CONCAT('%', #{name}, '%')
    </select>
    <select id="selectAgreePage" resultMap="WaitingPage">
        -- 实现已同意审批查询
        SELECT DISTINCT
            r.registration_id AS registration_id,
            r.true_faculty_name AS true_faculty_name,
            r.true_faculty_id AS true_faculty_id,
            u.faculty_faculty_id AS faculty_faculty_id,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus,
            f.level AS level,
            f.college_college_id AS collegeCollegeId
        FROM
            registration r
                JOIN
            approval a ON a.registration_registration_id = r.registration_id
                JOIN
            user u
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId}
          AND f.faculty_id = #{userId}
          AND a.approval_faculty_id = #{userId}
          AND a.approval_result = 1
    </select>
    <select id="selectDissgreePage" resultMap="WaitingPage">
        -- 实现未同意审批查询
        SELECT
            r.registration_id AS registration_id,
            r.true_faculty_name AS true_faculty_name,
            r.true_faculty_id AS true_faculty_id,
            u.faculty_faculty_id AS faculty_faculty_id,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus,
            f.level AS level,
            f.college_college_id AS collegeCollegeId
        FROM
            registration r
                JOIN
            user u
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId}
          AND r.pass_or_not = 0
          AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
          AND (
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 2
                OR
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 3
                OR
                        (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 4
            )
    </select>
    <select id="getAgreeUnclearFindByWorkNum" resultMap="WaitingPage">
        -- 在这个地方实现上面selectAgreePage中使用工号的模糊查询
        -- 传入参数为worknum（Long）
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND r.pass_or_not IS NULL
               AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
               AND (
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 2
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 3
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 4
                 )) AS registration
        WHERE
            registration.true_faculty_id LIKE CONCAT('%', #{worknum}, '%')
    </select>
    <select id="getAgreeUnclearFindByName" resultMap="WaitingPage">
        -- 在这个地方实现上面selectAgreePage中使用姓名的模糊查询
        -- 传入参数为name（String）
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT DISTINCT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 approval a ON a.registration_registration_id = r.registration_id
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND f.faculty_id = #{userId}
               AND a.approval_faculty_id = #{userId}
               AND a.approval_result = 1) AS registration
        WHERE
            registration.true_faculty_name LIKE CONCAT('%', #{name}, '%')
        OR registration.true_faculty_id LIKE CONCAT('%', #{name}, '%')
    </select>
    <select id="getDisagreeUnclearFindByWorkNum" resultMap="WaitingPage">
        -- 在这个地方实现上面selectDisagreePage中使用工号的模糊查询
        -- 传入参数为worknum（Long）
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND r.pass_or_not = 0
               AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
               AND (
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 2
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 3
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 4
                 )) AS registration
        WHERE
            registration.true_faculty_id LIKE CONCAT('%', #{worknum}, '%')
    </select>
    <select id="getDisagreeUnclearFindByName" resultMap="WaitingPage">
        -- 在这个地方实现上面selectDisagreePage中使用姓名的模糊查询
        -- 传入参数为name（String）
        SELECT
            registration.registration_id AS registration_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.true_faculty_id AS true_faculty_id,
            registration.batch_name AS batch_name,
            registration.target_campus AS target_campus,
            registration.level AS level,
            registration.collegeCollegeId AS collegeCollegeId
        FROM
            (SELECT
                 r.registration_id AS registration_id,
                 r.true_faculty_name AS true_faculty_name,
                 r.true_faculty_id AS true_faculty_id,
                 u.faculty_faculty_id AS faculty_faculty_id,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus,
                 f.level AS level,
                 f.college_college_id AS collegeCollegeId
             FROM
                 registration r
                     JOIN
                 user u
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId}
               AND r.pass_or_not = 0
               AND f.college_college_id = (SELECT college_college_id FROM faculty WHERE faculty_id = r.true_faculty_id)
               AND (
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 1 AND r.state = 2
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 4 AND r.state = 3
                     OR
                             (SELECT level FROM faculty WHERE faculty_id = (SELECT faculty_faculty_id FROM user WHERE user_id = #{userId})) = 5 AND r.state = 4
                 )) AS registration
        WHERE
            registration.true_faculty_name LIKE CONCAT('%', #{name}, '%')
        OR registration.true_faculty_id LIKE CONCAT('%', #{name}, '%')
    </select>
    <select id="selectWaitingPageALL" resultMap="WaitingPage">
        SELECT
            r.true_faculty_id AS true_faculty_id,
            r.true_faculty_name AS true_faculty_name,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            user u
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId} AND r.pass_or_not IS NULL AND  r.state = 4
    </select>
    <select id="selectAgreePageALL" resultMap="WaitingPage">
        SELECT
            r.true_faculty_id AS true_faculty_id,
            r.true_faculty_name AS true_faculty_name,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            user u
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId} AND r.pass_or_not = 1 AND  r.state = 5
    </select>
    <select id="selectDisagreePageALL" resultMap="WaitingPage">
        SELECT
            r.true_faculty_id AS true_faculty_id,
            r.true_faculty_name AS true_faculty_name,
            b.batch_name AS batch_Name,
            r.target_campus AS target_campus
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                JOIN
            user u
                JOIN
            faculty f ON u.faculty_faculty_id = f.faculty_id
        WHERE
            u.user_id = #{userId} AND r.pass_or_not = 0 AND  r.state = 5
    </select>
    <select id="getWaitingUnclearALLByString" resultMap="WaitingPage">
        SELECT
            registration.true_faculty_id AS true_faculty_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.batch_Name AS batch_Name,
            registration.target_campus AS target_campus
        FROM
            (SELECT
                r.true_faculty_id AS true_faculty_id,
                r.true_faculty_name AS true_faculty_name,
                b.batch_name AS batch_Name,
                r.target_campus AS target_campus
            FROM
                registration r
                    JOIN
                batch b ON r.batch_batch_id = b.batch_id
                    JOIN
                user u
                    JOIN
                faculty f ON u.faculty_faculty_id = f.faculty_id
            WHERE
                u.user_id = #{userId} AND r.pass_or_not IS NULL AND  r.state = 4) AS registration
        WHERE
            registration.true_faculty_name LIKE CONCAT('%', #{trueFacultyName}, '%')
            OR registration.true_faculty_id LIKE CONCAT('%', #{trueFacultyName}, '%')
    </select>
    <select id="getWaitingUnclearALLWorknum" resultMap="WaitingPage">
        SELECT
            registration.true_faculty_id AS true_faculty_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.batch_Name AS batch_Name,
            registration.target_campus AS target_campus
        FROM
            (SELECT
                 r.true_faculty_id AS true_faculty_id,
                 r.true_faculty_name AS true_faculty_name,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus
             FROM
                 registration r
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 user u
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId} AND r.pass_or_not IS NULL AND  r.state = 4) AS registration
        WHERE
                registration.true_faculty_id LIKE CONCAT('%', #{trueFacultyId}, '%')
    </select>
    <select id="getAgreeUnclearALLByString" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            registration.true_faculty_id AS true_faculty_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.batch_Name AS batch_Name,
            registration.target_campus AS target_campus
        FROM
            (SELECT
                 r.true_faculty_id AS true_faculty_id,
                 r.true_faculty_name AS true_faculty_name,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus
             FROM
                 registration r
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 user u
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId} AND r.pass_or_not = 1 AND  r.state = 5) AS registration
        WHERE
                registration.true_faculty_name LIKE CONCAT('%', #{trueFacultyName}, '%')
           OR registration.true_faculty_id LIKE CONCAT('%', #{trueFacultyName}, '%')
    </select>
    <select id="getDisagreeUnclearALLByString" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            registration.true_faculty_id AS true_faculty_id,
            registration.true_faculty_name AS true_faculty_name,
            registration.batch_Name AS batch_Name,
            registration.target_campus AS target_campus
        FROM
            (SELECT
                 r.true_faculty_id AS true_faculty_id,
                 r.true_faculty_name AS true_faculty_name,
                 b.batch_name AS batch_Name,
                 r.target_campus AS target_campus
             FROM
                 registration r
                     JOIN
                 batch b ON r.batch_batch_id = b.batch_id
                     JOIN
                 user u
                     JOIN
                 faculty f ON u.faculty_faculty_id = f.faculty_id
             WHERE
                 u.user_id = #{userId} AND r.pass_or_not = 0 AND  r.state = 5) AS registration
        WHERE
                registration.true_faculty_name LIKE CONCAT('%', #{trueFacultyName}, '%')
           OR registration.true_faculty_id LIKE CONCAT('%', #{trueFacultyName}, '%')
    </select>
    <select id="teachersSeeTheirRegistrations" resultMap="TeachersBatchDetail">
        SELECT
            b.batch_name AS batch_name,
            b.reg_start_time AS reg_start_time,
            b.reg_end_time AS reg_end_time,
            r.confirm_or_not AS confirm_or_not
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            r.true_faculty_id = #{userId}
    </select>
    <select id="countByTrueFacultyId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM registration
        WHERE true_faculty_id = #{trueFacultyId}
          AND batch_batch_id = #{batchBatchId}
    </select>
    <select id="seeDetailsOfOffice" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.college AS college_name,
            r.gender AS gender,
            r.true_faculty_id AS true_faculty_id,
            r.edu_qualification AS edu_qualification,
            r.tele AS tele,
            r.tele_backup AS tele_backup,
            r.avatar AS avatar,
            r.target_campus AS target_campus
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            r.true_faculty_id = #{trueFacultyId} AND
            b.batch_name = #{batchName}
    </select>
    <select id="JianKaoXiangXiMingDan" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.college AS college,
            r.true_faculty_id AS true_faculty_id,
            r.tele AS tele,
            r.faculty_faculty_id AS faculty_faculty_id
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            b.batch_name = #{batchName}
        AND r.pass_or_not = 1
    </select>
    <select id="ManageVice" resultMap="WaitingPageWithApproval">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.gender AS gender,
            r.true_faculty_id AS true_faculty_id,
            r.college AS college,
            r.pass_or_not AS pass_or_not,
            MAX(a.approval_date) AS approval_date
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
                LEFT JOIN
            approval a ON r.registration_id = a.registration_registration_id
        WHERE
            b.batch_name = #{batchName}
        GROUP BY
            r.registration_id
    </select>
    <select id="planVice" resultMap="WaitingPageWithBatch">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.gender AS gender,
            r.true_faculty_id AS true_faculty_id,
            r.college AS college,
            r.tele AS tele,
            r.pass_or_not AS pass_or_not,
            r.classroom AS classroom,
            b.batch_duration AS batch_duration,
            b.batch_start_time AS batch_start_time,
            b.batch_end_time AS batch_end_time
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            b.batch_name = #{batchName}
        AND r.confirm_or_not = 1
    </select>
    <select id="infoConfirmVice" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.gender AS gender,
            r.true_faculty_id AS true_faculty_id,
            r.college AS college,
            r.tele AS tele,
            r.confirm_or_not AS confirm_or_not
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            b.batch_name = #{batchName}
          AND r.pass_or_not = 1
    </select>
    <select id="feesVice" resultType="com.example.mybatisplus.model.domain.Registration">
        SELECT
            r.true_faculty_name AS true_faculty_name,
            r.gender AS gender,
            r.true_faculty_id AS true_faculty_id,
            r.college AS college,
            r.tele AS tele,
            r.amount AS amount,
            b.batch_duration AS batch_duration,
            b.batch_start_time AS batch_start_time,
            b.batch_end_time AS batch_end_time
        FROM
            registration r
                JOIN
            batch b ON r.batch_batch_id = b.batch_id
        WHERE
            b.batch_name = #{batchName}
          AND r.confirm_or_not = 1
    </select>
    <select id="teachersSeeTheirRegistrationsFind"
            resultType="com.example.mybatisplus.model.domain.Registration"></select>


</mapper>
